// console.log('number' + 3 + 3); // отримую в консолі number33, це означає що відбувається конкатенація рядка "number" з числом 3 на виході отримую рядок, а після вже рядок number3 об'єднується з числом 3 - отримую number33
//console.log(null + 3); // отримую 3 в консолі, тому що null має нульове значення, 0 + 3 = 3
//console.log(5 && "qwerty"); // отримую qwerty, тому що значення A (5) істинне, при && якщо значення істинне, то саме друге значення B(qwerty) виводити
//console.log(+'40' + +'2' + "hillel"); // отримую 42hillel, +унарний оператор перетворює значенння 40 в число, '2' також перетворює на число, 40 + 2 = 42, 42 + рядок 'hillel'  
//console.log('10' - 5 === 6); // отримую false. арифметичний оператор перетворить "10" в число, а 5 не === 6
//console.log(true + false); // отримую 1. true перетвориться на 1, а false на 0
//console.log('4px' - 3); // видає помилку, тому що не може арифетичний оператор перетворити 4px на число, так як значення не містить його
//console.log('4' - 3); // арифметичний оператор - перетворює "4" в число 4 - 3 = 1
//console.log('6' + 3 ** 0); // отримую "61". 3 в степені 1 = 1, + виступатиме в ролі оператора конкатенації рядків і не перетворить "6" в число, тому вийде 61
//console.log(12 / '6'); // отримую 2. арифметичний оператор / перетворить "6" в число
//console.log('10' + (5 === 6)); // отримую "10false 5" === 6 = false. при наявності оператора конкатенації + нечислового значення "10" та нечислове значення false а останнє не перетворюється на 0   
//console.log(null == ''); // отримую false. == зведе обидва значення до одного типу та порівняє нуль не дорівнює ""
//console.log(3 ** (9 / 3)); // отримую 27. 3 в степені 3 (9 / 3 = 3) = 27
//console.log(!!'false' == !!'true'); // отримую false. !! виводить true для будь-якого порожнього та false для будь-якого не порожнього рядка. наступний ! змінить це значення на протилежне. 1 true не == 0 false  
//console.log(0 || '0' && 1); // отримую 1. перше виконується '0' && 1 = true тому що обидва рядки є непорожніми. при 0 || 1 повертаємо перший оператор який є істинним 
//console.log((+null == false) < 1); // отримую false. +null = 0, унарний оператор перетворює значення на число. false == 0 = true. 1 < 1 = false
//console.log(false && true || true); // отримую true. false && true поверне перше false значення, а при || поверне перше true значення
//console.log(false && (false || true)); // отримую false. оператор || поверне перше істине значення true", оператор && перше хибне false 
//console.log((+null == false) < 1 ** 5); // отримую. false == 0 = true (+null унарний оператор змінює на число), true (1) не менше за 1^5. тобто true < 1 ** 5 = false
//console.log(0 == null); // отримую false. null при порівняннях використовується для позначення явної відсутності значення. 0 має значення, тобто 0 не дорівнює null
